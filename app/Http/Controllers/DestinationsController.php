<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class DestinationsController extends Controller
{
    // ðŸ”¹ Tableau de donnÃ©es des planÃ¨tes
    private $planets = [
        'moon' => [
            'name' => 'Lune',
            'description' => "Voyez notre planÃ¨te comme vous ne lâ€™avez jamais vue auparavant.
                              Un parfait voyage de dÃ©tente pour vous aider Ã  prendre du recul
                              et revenir requinquer. Pendant que vous y Ãªtes,
                              plongez-vous dans lâ€™histoire en visitant les sites
                              dâ€™atterrissage de Luna 2 et Apollo 11.",
            'distance' => '384 400 km',
            'travel' => '3 jours',
        ],
        'mars' => [
            'name' => 'Mars',
            'description' => "La planÃ¨te rouge, pleine de mystÃ¨res et dâ€™avenir.
                              PrÃ©parez-vous Ã  marcher sur un nouveau monde fascinant...",
            'distance' => '225 millions km',
            'travel' => '9 mois',
        ],
        'europa' => [
            'name' => 'Europe',
            'description' => "La lune glacÃ©e de Jupiter, recouverte dâ€™ocÃ©ans souterrains.
                              Peut-Ãªtre la prochaine frontiÃ¨re de lâ€™exploration spatiale...",
            'distance' => '628 millions km',
            'travel' => '6 ans',
        ],
        'titan' => [
            'name' => 'Titan',
            'description' => "La lune de Saturne avec ses lacs de mÃ©thane et
                              son atmosphÃ¨re dense. Une destination unique et mystÃ©rieuse...",
            'distance' => '1,6 milliards km',
            'travel' => '7 ans',
        ],
    ];

    /**
     * ðŸ”¹ Affiche la destination par dÃ©faut
     * Ici : redirection automatique vers la Lune
     */
    public function index()
    {
        return redirect()->route('destinations.show', 'moon');
    }

    /**
     * ðŸ”¹ Affiche une planÃ¨te prÃ©cise
     *
     * @param string $planet (clÃ© : moon, mars, europa, titan)
     */
    public function show($planet)
    {
        if (!array_key_exists($planet, $this->planets)) {
            abort(404); // renvoie une erreur 404 si la planÃ¨te nâ€™existe pas
        }

        $data = $this->planets[$planet];

        return view('pages.destinations', [
            'planet' => $planet, // slug (ex: moon)
            'data'   => $data,   // donnÃ©es de la planÃ¨te
            'planets'=> $this->planets // utile pour le menu (Lune, Marsâ€¦)
        ]);
    }
}
